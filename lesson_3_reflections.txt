When would you want to use a remote repository rather than keeping all your work local?
I would want to use it to make is easier to share my work with other people.

Why might you want to always pull changes manually rather than having Git automatically stay 
up-to-date with your remote repository?
It could be to make sure that the local repository only has the changes that are needed in it
at any given time rather than the ones that could cause unforeseen effects.

Describe the differences between forks, clones, and branches. When would you use one instead of another?
Forks are made through GitHub and they come with a remote repository already set up. Clones can be created manually
and don't have to involve a remote repository. Branches are created from the same repository. Forks can be used when
all you want to do is have your own copy of an existing repository on GitHub and that repository also exists on GitHub.
Clones can be used when you want to make a copy of a local repository on your own computer or if you want to copy a
remote repository on your computer. Branches can be used if you want to work on some code that's part of a repository
but you don't want to cause any problems for the people who are interested in the repository but not in your changes.

What is the benefit of having a copy of the last known state of the remote stored locally?
It allows git to compare any changes that you made to a local branch with the changes on GitHub without having to pull
any changes from GitHub.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
I could use cvs, svn or some other tool. I am not sure about what would be harder or easier because they all support similar
features, I believe and I don't have an in-depth knowledge of any of them.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
Making changes in a branch allows the master branch to stay free of the errors and/or problems caused by the changes made
to the branch. If changes are made directly to master then the process of merge with and possibly deleting the branch doesn't 
need to take place. 